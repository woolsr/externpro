diff --git a/CMakeLists.txt b/CMakeLists.txt
new file mode 100644
index 0000000..1a6f0de
--- /dev/null
+++ b/CMakeLists.txt
@@ -0,0 +1,30 @@
+cmake_minimum_required(VERSION 3.24)
+project(rapidxml)
+include(GNUInstallDirs)
+include(flags OPTIONAL)
+set(lib_name ${PROJECT_NAME})
+########################################
+set(root_srcs
+  license.txt
+  manual.html
+  rapidxml.hpp
+  rapidxml_iterators.hpp
+  rapidxml_print.hpp
+  rapidxml_utils.hpp
+  )
+source_group("" FILES ${root_srcs})
+list(APPEND ${lib_name}_libsrcs ${root_srcs})
+########################################
+add_library(${lib_name} INTERFACE ${${lib_name}_libsrcs})
+target_include_directories(${lib_name} INTERFACE $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>)
+########################################
+set(targetsFile ${PROJECT_NAME}-targets)
+install(TARGETS ${lib_name} EXPORT ${targetsFile})
+install(FILES ${root_srcs} DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/${PROJECT_NAME})
+if(DEFINED XP_NAMESPACE)
+  set(nameSpace NAMESPACE ${XP_NAMESPACE}::)
+endif()
+if(NOT DEFINED XP_INSTALL_CMAKEDIR)
+  set(XP_INSTALL_CMAKEDIR ${CMAKE_INSTALL_DATADIR}/cmake)
+endif()
+install(EXPORT ${targetsFile} DESTINATION ${XP_INSTALL_CMAKEDIR} ${nameSpace})
diff --git a/rapidxml_print.hpp b/rapidxml_print.hpp
index d03d5f5..0a083d6 100644
--- a/rapidxml_print.hpp
+++ b/rapidxml_print.hpp
@@ -28,6 +28,25 @@ namespace rapidxml
     //! \cond internal
     namespace internal
     {
+        ///////////////////////////////////////////////////////////////////////////
+        // Forward declarations
+
+        template<class OutIt, class Ch>
+        inline OutIt print_children(OutIt out, const xml_node<Ch> *node, int flags, int indent);
+        template<class OutIt, class Ch>
+        inline OutIt print_element_node(OutIt out, const xml_node<Ch> *node, int flags, int indent);
+        template<class OutIt, class Ch>
+        inline OutIt print_cdata_node(OutIt out, const xml_node<Ch> *node, int flags, int indent);
+        template<class OutIt, class Ch>
+        inline OutIt print_data_node(OutIt out, const xml_node<Ch> *node, int flags, int indent);
+        template<class OutIt, class Ch>
+        inline OutIt print_comment_node(OutIt out, const xml_node<Ch> *node, int flags, int indent);
+        template<class OutIt, class Ch>
+        inline OutIt print_declaration_node(OutIt out, const xml_node<Ch> *node, int flags, int indent);
+        template<class OutIt, class Ch>
+        inline OutIt print_doctype_node(OutIt out, const xml_node<Ch> *node, int flags, int indent);
+        template<class OutIt, class Ch>
+        inline OutIt print_pi_node(OutIt out, const xml_node<Ch> *node, int flags, int indent);
         
         ///////////////////////////////////////////////////////////////////////////
         // Internal character operations
